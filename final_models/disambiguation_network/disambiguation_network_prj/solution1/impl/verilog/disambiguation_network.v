// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="disambiguation_network,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flvb2104-2-i,HLS_INPUT_CLOCK=12.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=10.387625,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=7,HLS_SYN_DSP=12,HLS_SYN_FF=517,HLS_SYN_LUT=21932,HLS_VERSION=2020_1}" *)

module disambiguation_network (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_ap_vld,
        input_V,
        layer11_out_0_V,
        layer11_out_0_V_ap_vld,
        layer11_out_1_V,
        layer11_out_1_V_ap_vld,
        layer11_out_2_V,
        layer11_out_2_V_ap_vld,
        layer11_out_3_V,
        layer11_out_3_V_ap_vld,
        layer11_out_4_V,
        layer11_out_4_V_ap_vld,
        layer11_out_5_V,
        layer11_out_5_V_ap_vld,
        layer11_out_6_V,
        layer11_out_6_V_ap_vld,
        layer11_out_7_V,
        layer11_out_7_V_ap_vld,
        layer11_out_8_V,
        layer11_out_8_V_ap_vld,
        layer11_out_9_V,
        layer11_out_9_V_ap_vld,
        layer11_out_10_V,
        layer11_out_10_V_ap_vld,
        layer11_out_11_V,
        layer11_out_11_V_ap_vld,
        const_size_in_1,
        const_size_in_1_ap_vld,
        const_size_out_1,
        const_size_out_1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   input_V_ap_vld;
input  [47:0] input_V;
output  [9:0] layer11_out_0_V;
output   layer11_out_0_V_ap_vld;
output  [9:0] layer11_out_1_V;
output   layer11_out_1_V_ap_vld;
output  [9:0] layer11_out_2_V;
output   layer11_out_2_V_ap_vld;
output  [9:0] layer11_out_3_V;
output   layer11_out_3_V_ap_vld;
output  [9:0] layer11_out_4_V;
output   layer11_out_4_V_ap_vld;
output  [9:0] layer11_out_5_V;
output   layer11_out_5_V_ap_vld;
output  [9:0] layer11_out_6_V;
output   layer11_out_6_V_ap_vld;
output  [9:0] layer11_out_7_V;
output   layer11_out_7_V_ap_vld;
output  [9:0] layer11_out_8_V;
output   layer11_out_8_V_ap_vld;
output  [9:0] layer11_out_9_V;
output   layer11_out_9_V_ap_vld;
output  [9:0] layer11_out_10_V;
output   layer11_out_10_V_ap_vld;
output  [9:0] layer11_out_11_V;
output   layer11_out_11_V_ap_vld;
output  [15:0] const_size_in_1;
output   const_size_in_1_ap_vld;
output  [15:0] const_size_out_1;
output   const_size_out_1_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer11_out_0_V_ap_vld;
reg layer11_out_1_V_ap_vld;
reg layer11_out_2_V_ap_vld;
reg layer11_out_3_V_ap_vld;
reg layer11_out_4_V_ap_vld;
reg layer11_out_5_V_ap_vld;
reg layer11_out_6_V_ap_vld;
reg layer11_out_7_V_ap_vld;
reg layer11_out_8_V_ap_vld;
reg layer11_out_9_V_ap_vld;
reg layer11_out_10_V_ap_vld;
reg layer11_out_11_V_ap_vld;
reg const_size_in_1_ap_vld;
reg const_size_out_1_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
reg    input_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [47:0] input_V_preg;
reg   [47:0] input_V_in_sig;
reg    input_V_ap_vld_preg;
wire   [9:0] exp_table3_address0;
reg    exp_table3_ce0;
wire   [16:0] exp_table3_q0;
wire   [9:0] exp_table3_address1;
reg    exp_table3_ce1;
wire   [16:0] exp_table3_q1;
wire   [9:0] exp_table3_address2;
reg    exp_table3_ce2;
wire   [16:0] exp_table3_q2;
wire   [9:0] exp_table3_address3;
reg    exp_table3_ce3;
wire   [16:0] exp_table3_q3;
wire   [9:0] exp_table3_address4;
reg    exp_table3_ce4;
wire   [16:0] exp_table3_q4;
wire   [9:0] exp_table3_address5;
reg    exp_table3_ce5;
wire   [16:0] exp_table3_q5;
wire   [9:0] exp_table3_address6;
reg    exp_table3_ce6;
wire   [16:0] exp_table3_q6;
wire   [9:0] exp_table3_address7;
reg    exp_table3_ce7;
wire   [16:0] exp_table3_q7;
wire   [9:0] exp_table3_address8;
reg    exp_table3_ce8;
wire   [16:0] exp_table3_q8;
wire   [9:0] exp_table3_address9;
reg    exp_table3_ce9;
wire   [16:0] exp_table3_q9;
wire   [9:0] exp_table3_address10;
reg    exp_table3_ce10;
wire   [16:0] exp_table3_q10;
wire   [9:0] exp_table3_address11;
reg    exp_table3_ce11;
wire   [16:0] exp_table3_q11;
wire   [9:0] invert_table4_address0;
reg    invert_table4_ce0;
wire   [17:0] invert_table4_q0;
reg    input_V_blk_n;
wire    ap_block_pp0_stage0;
reg   [6:0] layer4_out_0_V_reg_1304;
reg   [6:0] layer4_out_1_V_reg_1309;
reg   [6:0] layer4_out_2_V_reg_1314;
reg   [6:0] layer4_out_3_V_reg_1319;
reg   [6:0] layer4_out_4_V_reg_1324;
reg   [6:0] layer4_out_5_V_reg_1329;
reg   [6:0] layer4_out_6_V_reg_1334;
reg   [6:0] layer4_out_7_V_reg_1339;
reg   [6:0] layer4_out_8_V_reg_1344;
reg   [6:0] layer4_out_9_V_reg_1349;
reg   [6:0] layer4_out_10_V_reg_1354;
reg   [6:0] layer4_out_11_V_reg_1359;
reg   [6:0] layer4_out_12_V_reg_1364;
reg   [6:0] layer4_out_13_V_reg_1369;
reg   [6:0] layer4_out_14_V_reg_1374;
reg   [6:0] layer4_out_15_V_reg_1379;
reg   [6:0] layer4_out_16_V_reg_1384;
reg   [6:0] layer4_out_17_V_reg_1389;
reg   [6:0] layer4_out_18_V_reg_1394;
reg   [6:0] layer4_out_19_V_reg_1399;
reg   [6:0] layer4_out_20_V_reg_1404;
reg   [6:0] layer4_out_21_V_reg_1409;
reg   [6:0] layer4_out_22_V_reg_1414;
reg   [6:0] layer4_out_23_V_reg_1419;
reg   [6:0] layer4_out_24_V_reg_1424;
reg   [6:0] layer7_out_0_V_reg_1429;
reg   [6:0] layer7_out_1_V_reg_1434;
reg   [6:0] layer7_out_2_V_reg_1439;
reg   [6:0] layer7_out_3_V_reg_1444;
reg   [6:0] layer7_out_4_V_reg_1449;
reg   [6:0] layer7_out_5_V_reg_1454;
reg   [6:0] layer7_out_6_V_reg_1459;
reg   [6:0] layer7_out_7_V_reg_1464;
reg   [6:0] layer7_out_8_V_reg_1469;
reg   [6:0] layer7_out_9_V_reg_1474;
reg   [6:0] layer7_out_10_V_reg_1479;
reg   [6:0] layer7_out_11_V_reg_1484;
reg   [16:0] exp_res_0_V_reg_1549;
reg   [16:0] exp_res_1_V_reg_1554;
reg   [16:0] exp_res_2_V_reg_1559;
reg   [16:0] exp_res_3_V_reg_1564;
reg   [16:0] exp_res_4_V_reg_1569;
reg   [16:0] exp_res_5_V_reg_1574;
reg   [16:0] exp_res_6_V_reg_1579;
reg   [16:0] exp_res_7_V_reg_1584;
reg   [16:0] exp_res_8_V_reg_1589;
reg   [16:0] exp_res_9_V_reg_1594;
reg   [16:0] exp_res_10_V_reg_1599;
reg   [16:0] exp_res_11_V_reg_1604;
reg    ap_block_pp0_stage0_subdone;
wire    call_ret3_dense_latency_0_0_0_1_fu_360_ap_ready;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_0;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_1;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_2;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_3;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_4;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_5;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_6;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_7;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_8;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_9;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_10;
wire   [15:0] call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_11;
wire    call_ret_dense_latency_0_0_0_s_fu_389_ap_ready;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_0;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_1;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_2;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_3;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_4;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_5;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_6;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_7;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_8;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_9;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_10;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_11;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_12;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_13;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_14;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_15;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_16;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_17;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_18;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_19;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_20;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_21;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_22;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_23;
wire   [15:0] call_ret_dense_latency_0_0_0_s_fu_389_ap_return_24;
wire    call_ret2_relu_1_fu_395_ap_ready;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_0;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_1;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_2;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_3;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_4;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_5;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_6;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_7;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_8;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_9;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_10;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_11;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_12;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_13;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_14;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_15;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_16;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_17;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_18;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_19;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_20;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_21;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_22;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_23;
wire   [6:0] call_ret2_relu_1_fu_395_ap_return_24;
wire    call_ret5_conv_1d_latency_cl_0_fu_424_ap_ready;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_0;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_1;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_2;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_3;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_4;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_5;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_6;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_7;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_8;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_9;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_10;
wire   [15:0] call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_11;
wire    call_ret4_relu_fu_440_ap_ready;
wire   [6:0] call_ret4_relu_fu_440_ap_return_0;
wire   [6:0] call_ret4_relu_fu_440_ap_return_1;
wire   [6:0] call_ret4_relu_fu_440_ap_return_2;
wire   [6:0] call_ret4_relu_fu_440_ap_return_3;
wire   [6:0] call_ret4_relu_fu_440_ap_return_4;
wire   [6:0] call_ret4_relu_fu_440_ap_return_5;
wire   [6:0] call_ret4_relu_fu_440_ap_return_6;
wire   [6:0] call_ret4_relu_fu_440_ap_return_7;
wire   [6:0] call_ret4_relu_fu_440_ap_return_8;
wire   [6:0] call_ret4_relu_fu_440_ap_return_9;
wire   [6:0] call_ret4_relu_fu_440_ap_return_10;
wire   [6:0] call_ret4_relu_fu_440_ap_return_11;
wire    exp_sum_V_reduce_fu_456_ap_ready;
wire   [17:0] exp_sum_V_reduce_fu_456_ap_return;
wire   [63:0] zext_ln250_fu_875_p1;
wire   [63:0] zext_ln250_1_fu_890_p1;
wire   [63:0] zext_ln250_2_fu_905_p1;
wire   [63:0] zext_ln250_3_fu_920_p1;
wire   [63:0] zext_ln250_4_fu_935_p1;
wire   [63:0] zext_ln250_5_fu_950_p1;
wire   [63:0] zext_ln250_6_fu_965_p1;
wire   [63:0] zext_ln250_7_fu_980_p1;
wire   [63:0] zext_ln250_8_fu_995_p1;
wire   [63:0] zext_ln250_9_fu_1010_p1;
wire   [63:0] zext_ln250_10_fu_1025_p1;
wire   [63:0] zext_ln250_11_fu_1040_p1;
wire   [63:0] zext_ln258_fu_1055_p1;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] y_V_fu_865_p4;
wire   [9:0] y_V_1_fu_880_p4;
wire   [9:0] y_V_2_fu_895_p4;
wire   [9:0] y_V_3_fu_910_p4;
wire   [9:0] y_V_4_fu_925_p4;
wire   [9:0] y_V_5_fu_940_p4;
wire   [9:0] y_V_6_fu_955_p4;
wire   [9:0] y_V_7_fu_970_p4;
wire   [9:0] y_V_8_fu_985_p4;
wire   [9:0] y_V_9_fu_1000_p4;
wire   [9:0] y_V_10_fu_1015_p4;
wire   [9:0] y_V_11_fu_1030_p4;
wire   [9:0] y_V_12_fu_1045_p4;
wire  signed [20:0] mul_ln1118_fu_1220_p2;
wire  signed [20:0] mul_ln1118_1_fu_1227_p2;
wire  signed [20:0] mul_ln1118_2_fu_1234_p2;
wire  signed [20:0] mul_ln1118_3_fu_1241_p2;
wire  signed [20:0] mul_ln1118_4_fu_1248_p2;
wire  signed [20:0] mul_ln1118_5_fu_1255_p2;
wire  signed [20:0] mul_ln1118_6_fu_1262_p2;
wire  signed [20:0] mul_ln1118_7_fu_1269_p2;
wire  signed [20:0] mul_ln1118_8_fu_1276_p2;
wire  signed [20:0] mul_ln1118_9_fu_1283_p2;
wire  signed [20:0] mul_ln1118_10_fu_1290_p2;
wire  signed [20:0] mul_ln1118_11_fu_1297_p2;
wire  signed [17:0] mul_ln1118_fu_1220_p0;
wire  signed [20:0] sext_ln1116_fu_1060_p1;
wire   [16:0] mul_ln1118_fu_1220_p1;
wire  signed [17:0] mul_ln1118_1_fu_1227_p0;
wire   [16:0] mul_ln1118_1_fu_1227_p1;
wire  signed [17:0] mul_ln1118_2_fu_1234_p0;
wire   [16:0] mul_ln1118_2_fu_1234_p1;
wire  signed [17:0] mul_ln1118_3_fu_1241_p0;
wire   [16:0] mul_ln1118_3_fu_1241_p1;
wire  signed [17:0] mul_ln1118_4_fu_1248_p0;
wire   [16:0] mul_ln1118_4_fu_1248_p1;
wire  signed [17:0] mul_ln1118_5_fu_1255_p0;
wire   [16:0] mul_ln1118_5_fu_1255_p1;
wire  signed [17:0] mul_ln1118_6_fu_1262_p0;
wire   [16:0] mul_ln1118_6_fu_1262_p1;
wire  signed [17:0] mul_ln1118_7_fu_1269_p0;
wire   [16:0] mul_ln1118_7_fu_1269_p1;
wire  signed [17:0] mul_ln1118_8_fu_1276_p0;
wire   [16:0] mul_ln1118_8_fu_1276_p1;
wire  signed [17:0] mul_ln1118_9_fu_1283_p0;
wire   [16:0] mul_ln1118_9_fu_1283_p1;
wire  signed [17:0] mul_ln1118_10_fu_1290_p0;
wire   [16:0] mul_ln1118_10_fu_1290_p1;
wire  signed [17:0] mul_ln1118_11_fu_1297_p0;
wire   [16:0] mul_ln1118_11_fu_1297_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [20:0] mul_ln1118_10_fu_1290_p10;
wire   [20:0] mul_ln1118_11_fu_1297_p10;
wire   [20:0] mul_ln1118_1_fu_1227_p10;
wire   [20:0] mul_ln1118_2_fu_1234_p10;
wire   [20:0] mul_ln1118_3_fu_1241_p10;
wire   [20:0] mul_ln1118_4_fu_1248_p10;
wire   [20:0] mul_ln1118_5_fu_1255_p10;
wire   [20:0] mul_ln1118_6_fu_1262_p10;
wire   [20:0] mul_ln1118_7_fu_1269_p10;
wire   [20:0] mul_ln1118_8_fu_1276_p10;
wire   [20:0] mul_ln1118_9_fu_1283_p10;
wire   [20:0] mul_ln1118_fu_1220_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 input_V_preg = 48'd0;
#0 input_V_ap_vld_preg = 1'b0;
end

disambiguation_nebkb #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table3_address0),
    .ce0(exp_table3_ce0),
    .q0(exp_table3_q0),
    .address1(exp_table3_address1),
    .ce1(exp_table3_ce1),
    .q1(exp_table3_q1),
    .address2(exp_table3_address2),
    .ce2(exp_table3_ce2),
    .q2(exp_table3_q2),
    .address3(exp_table3_address3),
    .ce3(exp_table3_ce3),
    .q3(exp_table3_q3),
    .address4(exp_table3_address4),
    .ce4(exp_table3_ce4),
    .q4(exp_table3_q4),
    .address5(exp_table3_address5),
    .ce5(exp_table3_ce5),
    .q5(exp_table3_q5),
    .address6(exp_table3_address6),
    .ce6(exp_table3_ce6),
    .q6(exp_table3_q6),
    .address7(exp_table3_address7),
    .ce7(exp_table3_ce7),
    .q7(exp_table3_q7),
    .address8(exp_table3_address8),
    .ce8(exp_table3_ce8),
    .q8(exp_table3_q8),
    .address9(exp_table3_address9),
    .ce9(exp_table3_ce9),
    .q9(exp_table3_q9),
    .address10(exp_table3_address10),
    .ce10(exp_table3_ce10),
    .q10(exp_table3_q10),
    .address11(exp_table3_address11),
    .ce11(exp_table3_ce11),
    .q11(exp_table3_q11)
);

disambiguation_necud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table4_address0),
    .ce0(invert_table4_ce0),
    .q0(invert_table4_q0)
);

dense_latency_0_0_0_1 call_ret3_dense_latency_0_0_0_1_fu_360(
    .ap_ready(call_ret3_dense_latency_0_0_0_1_fu_360_ap_ready),
    .data_0_V_read(layer4_out_0_V_reg_1304),
    .data_1_V_read(layer4_out_1_V_reg_1309),
    .data_2_V_read(layer4_out_2_V_reg_1314),
    .data_3_V_read(layer4_out_3_V_reg_1319),
    .data_4_V_read(layer4_out_4_V_reg_1324),
    .data_5_V_read(layer4_out_5_V_reg_1329),
    .data_6_V_read(layer4_out_6_V_reg_1334),
    .data_7_V_read(layer4_out_7_V_reg_1339),
    .data_8_V_read(layer4_out_8_V_reg_1344),
    .data_9_V_read(layer4_out_9_V_reg_1349),
    .data_10_V_read(layer4_out_10_V_reg_1354),
    .data_11_V_read(layer4_out_11_V_reg_1359),
    .data_12_V_read(layer4_out_12_V_reg_1364),
    .data_13_V_read(layer4_out_13_V_reg_1369),
    .data_14_V_read(layer4_out_14_V_reg_1374),
    .data_15_V_read(layer4_out_15_V_reg_1379),
    .data_16_V_read(layer4_out_16_V_reg_1384),
    .data_17_V_read(layer4_out_17_V_reg_1389),
    .data_18_V_read(layer4_out_18_V_reg_1394),
    .data_19_V_read(layer4_out_19_V_reg_1399),
    .data_20_V_read(layer4_out_20_V_reg_1404),
    .data_21_V_read(layer4_out_21_V_reg_1409),
    .data_22_V_read(layer4_out_22_V_reg_1414),
    .data_23_V_read(layer4_out_23_V_reg_1419),
    .data_24_V_read(layer4_out_24_V_reg_1424),
    .ap_return_0(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_0),
    .ap_return_1(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_1),
    .ap_return_2(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_2),
    .ap_return_3(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_3),
    .ap_return_4(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_4),
    .ap_return_5(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_5),
    .ap_return_6(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_6),
    .ap_return_7(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_7),
    .ap_return_8(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_8),
    .ap_return_9(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_9),
    .ap_return_10(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_10),
    .ap_return_11(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_11)
);

dense_latency_0_0_0_s call_ret_dense_latency_0_0_0_s_fu_389(
    .ap_ready(call_ret_dense_latency_0_0_0_s_fu_389_ap_ready),
    .data_V_read(input_V_in_sig),
    .ap_return_0(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_0),
    .ap_return_1(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_1),
    .ap_return_2(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_2),
    .ap_return_3(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_3),
    .ap_return_4(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_4),
    .ap_return_5(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_5),
    .ap_return_6(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_6),
    .ap_return_7(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_7),
    .ap_return_8(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_8),
    .ap_return_9(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_9),
    .ap_return_10(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_10),
    .ap_return_11(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_11),
    .ap_return_12(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_12),
    .ap_return_13(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_13),
    .ap_return_14(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_14),
    .ap_return_15(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_15),
    .ap_return_16(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_16),
    .ap_return_17(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_17),
    .ap_return_18(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_18),
    .ap_return_19(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_19),
    .ap_return_20(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_20),
    .ap_return_21(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_21),
    .ap_return_22(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_22),
    .ap_return_23(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_23),
    .ap_return_24(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_24)
);

relu_1 call_ret2_relu_1_fu_395(
    .ap_ready(call_ret2_relu_1_fu_395_ap_ready),
    .data_0_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_0),
    .data_1_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_1),
    .data_2_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_2),
    .data_3_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_3),
    .data_4_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_4),
    .data_5_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_5),
    .data_6_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_6),
    .data_7_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_7),
    .data_8_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_8),
    .data_9_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_9),
    .data_10_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_10),
    .data_11_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_11),
    .data_12_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_12),
    .data_13_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_13),
    .data_14_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_14),
    .data_15_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_15),
    .data_16_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_16),
    .data_17_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_17),
    .data_18_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_18),
    .data_19_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_19),
    .data_20_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_20),
    .data_21_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_21),
    .data_22_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_22),
    .data_23_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_23),
    .data_24_V_read(call_ret_dense_latency_0_0_0_s_fu_389_ap_return_24),
    .ap_return_0(call_ret2_relu_1_fu_395_ap_return_0),
    .ap_return_1(call_ret2_relu_1_fu_395_ap_return_1),
    .ap_return_2(call_ret2_relu_1_fu_395_ap_return_2),
    .ap_return_3(call_ret2_relu_1_fu_395_ap_return_3),
    .ap_return_4(call_ret2_relu_1_fu_395_ap_return_4),
    .ap_return_5(call_ret2_relu_1_fu_395_ap_return_5),
    .ap_return_6(call_ret2_relu_1_fu_395_ap_return_6),
    .ap_return_7(call_ret2_relu_1_fu_395_ap_return_7),
    .ap_return_8(call_ret2_relu_1_fu_395_ap_return_8),
    .ap_return_9(call_ret2_relu_1_fu_395_ap_return_9),
    .ap_return_10(call_ret2_relu_1_fu_395_ap_return_10),
    .ap_return_11(call_ret2_relu_1_fu_395_ap_return_11),
    .ap_return_12(call_ret2_relu_1_fu_395_ap_return_12),
    .ap_return_13(call_ret2_relu_1_fu_395_ap_return_13),
    .ap_return_14(call_ret2_relu_1_fu_395_ap_return_14),
    .ap_return_15(call_ret2_relu_1_fu_395_ap_return_15),
    .ap_return_16(call_ret2_relu_1_fu_395_ap_return_16),
    .ap_return_17(call_ret2_relu_1_fu_395_ap_return_17),
    .ap_return_18(call_ret2_relu_1_fu_395_ap_return_18),
    .ap_return_19(call_ret2_relu_1_fu_395_ap_return_19),
    .ap_return_20(call_ret2_relu_1_fu_395_ap_return_20),
    .ap_return_21(call_ret2_relu_1_fu_395_ap_return_21),
    .ap_return_22(call_ret2_relu_1_fu_395_ap_return_22),
    .ap_return_23(call_ret2_relu_1_fu_395_ap_return_23),
    .ap_return_24(call_ret2_relu_1_fu_395_ap_return_24)
);

conv_1d_latency_cl_0 call_ret5_conv_1d_latency_cl_0_fu_424(
    .ap_ready(call_ret5_conv_1d_latency_cl_0_fu_424_ap_ready),
    .data_0_V_read(layer7_out_0_V_reg_1429),
    .data_1_V_read(layer7_out_1_V_reg_1434),
    .data_2_V_read(layer7_out_2_V_reg_1439),
    .data_3_V_read(layer7_out_3_V_reg_1444),
    .data_4_V_read(layer7_out_4_V_reg_1449),
    .data_5_V_read(layer7_out_5_V_reg_1454),
    .data_6_V_read(layer7_out_6_V_reg_1459),
    .data_7_V_read(layer7_out_7_V_reg_1464),
    .data_8_V_read(layer7_out_8_V_reg_1469),
    .data_9_V_read(layer7_out_9_V_reg_1474),
    .data_10_V_read(layer7_out_10_V_reg_1479),
    .data_11_V_read(layer7_out_11_V_reg_1484),
    .ap_return_0(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_0),
    .ap_return_1(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_1),
    .ap_return_2(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_2),
    .ap_return_3(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_3),
    .ap_return_4(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_4),
    .ap_return_5(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_5),
    .ap_return_6(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_6),
    .ap_return_7(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_7),
    .ap_return_8(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_8),
    .ap_return_9(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_9),
    .ap_return_10(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_10),
    .ap_return_11(call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_11)
);

relu call_ret4_relu_fu_440(
    .ap_ready(call_ret4_relu_fu_440_ap_ready),
    .data_0_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_0),
    .data_1_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_1),
    .data_2_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_2),
    .data_3_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_3),
    .data_4_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_4),
    .data_5_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_5),
    .data_6_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_6),
    .data_7_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_7),
    .data_8_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_8),
    .data_9_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_9),
    .data_10_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_10),
    .data_11_V_read(call_ret3_dense_latency_0_0_0_1_fu_360_ap_return_11),
    .ap_return_0(call_ret4_relu_fu_440_ap_return_0),
    .ap_return_1(call_ret4_relu_fu_440_ap_return_1),
    .ap_return_2(call_ret4_relu_fu_440_ap_return_2),
    .ap_return_3(call_ret4_relu_fu_440_ap_return_3),
    .ap_return_4(call_ret4_relu_fu_440_ap_return_4),
    .ap_return_5(call_ret4_relu_fu_440_ap_return_5),
    .ap_return_6(call_ret4_relu_fu_440_ap_return_6),
    .ap_return_7(call_ret4_relu_fu_440_ap_return_7),
    .ap_return_8(call_ret4_relu_fu_440_ap_return_8),
    .ap_return_9(call_ret4_relu_fu_440_ap_return_9),
    .ap_return_10(call_ret4_relu_fu_440_ap_return_10),
    .ap_return_11(call_ret4_relu_fu_440_ap_return_11)
);

reduce exp_sum_V_reduce_fu_456(
    .ap_ready(exp_sum_V_reduce_fu_456_ap_ready),
    .x_0_V_read(exp_table3_q0),
    .x_1_V_read(exp_table3_q1),
    .x_2_V_read(exp_table3_q2),
    .x_3_V_read(exp_table3_q3),
    .x_4_V_read(exp_table3_q4),
    .x_5_V_read(exp_table3_q5),
    .x_6_V_read(exp_table3_q6),
    .x_7_V_read(exp_table3_q7),
    .x_8_V_read(exp_table3_q8),
    .x_9_V_read(exp_table3_q9),
    .x_10_V_read(exp_table3_q10),
    .x_11_V_read(exp_table3_q11),
    .ap_return(exp_sum_V_reduce_fu_456_ap_return)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U92(
    .din0(mul_ln1118_fu_1220_p0),
    .din1(mul_ln1118_fu_1220_p1),
    .dout(mul_ln1118_fu_1220_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U93(
    .din0(mul_ln1118_1_fu_1227_p0),
    .din1(mul_ln1118_1_fu_1227_p1),
    .dout(mul_ln1118_1_fu_1227_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U94(
    .din0(mul_ln1118_2_fu_1234_p0),
    .din1(mul_ln1118_2_fu_1234_p1),
    .dout(mul_ln1118_2_fu_1234_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U95(
    .din0(mul_ln1118_3_fu_1241_p0),
    .din1(mul_ln1118_3_fu_1241_p1),
    .dout(mul_ln1118_3_fu_1241_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U96(
    .din0(mul_ln1118_4_fu_1248_p0),
    .din1(mul_ln1118_4_fu_1248_p1),
    .dout(mul_ln1118_4_fu_1248_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U97(
    .din0(mul_ln1118_5_fu_1255_p0),
    .din1(mul_ln1118_5_fu_1255_p1),
    .dout(mul_ln1118_5_fu_1255_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U98(
    .din0(mul_ln1118_6_fu_1262_p0),
    .din1(mul_ln1118_6_fu_1262_p1),
    .dout(mul_ln1118_6_fu_1262_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U99(
    .din0(mul_ln1118_7_fu_1269_p0),
    .din1(mul_ln1118_7_fu_1269_p1),
    .dout(mul_ln1118_7_fu_1269_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U100(
    .din0(mul_ln1118_8_fu_1276_p0),
    .din1(mul_ln1118_8_fu_1276_p1),
    .dout(mul_ln1118_8_fu_1276_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U101(
    .din0(mul_ln1118_9_fu_1283_p0),
    .din1(mul_ln1118_9_fu_1283_p1),
    .dout(mul_ln1118_9_fu_1283_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U102(
    .din0(mul_ln1118_10_fu_1290_p0),
    .din1(mul_ln1118_10_fu_1290_p1),
    .dout(mul_ln1118_10_fu_1290_p2)
);

disambiguation_nedEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 21 ))
disambiguation_nedEe_U103(
    .din0(mul_ln1118_11_fu_1297_p0),
    .din1(mul_ln1118_11_fu_1297_p1),
    .dout(mul_ln1118_11_fu_1297_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (input_V_ap_vld == 1'b1))) begin
            input_V_ap_vld_preg <= input_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_V_preg <= 48'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (input_V_ap_vld == 1'b1))) begin
            input_V_preg <= input_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        exp_res_0_V_reg_1549 <= exp_table3_q0;
        exp_res_10_V_reg_1599 <= exp_table3_q10;
        exp_res_11_V_reg_1604 <= exp_table3_q11;
        exp_res_1_V_reg_1554 <= exp_table3_q1;
        exp_res_2_V_reg_1559 <= exp_table3_q2;
        exp_res_3_V_reg_1564 <= exp_table3_q3;
        exp_res_4_V_reg_1569 <= exp_table3_q4;
        exp_res_5_V_reg_1574 <= exp_table3_q5;
        exp_res_6_V_reg_1579 <= exp_table3_q6;
        exp_res_7_V_reg_1584 <= exp_table3_q7;
        exp_res_8_V_reg_1589 <= exp_table3_q8;
        exp_res_9_V_reg_1594 <= exp_table3_q9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer4_out_0_V_reg_1304 <= call_ret2_relu_1_fu_395_ap_return_0;
        layer4_out_10_V_reg_1354 <= call_ret2_relu_1_fu_395_ap_return_10;
        layer4_out_11_V_reg_1359 <= call_ret2_relu_1_fu_395_ap_return_11;
        layer4_out_12_V_reg_1364 <= call_ret2_relu_1_fu_395_ap_return_12;
        layer4_out_13_V_reg_1369 <= call_ret2_relu_1_fu_395_ap_return_13;
        layer4_out_14_V_reg_1374 <= call_ret2_relu_1_fu_395_ap_return_14;
        layer4_out_15_V_reg_1379 <= call_ret2_relu_1_fu_395_ap_return_15;
        layer4_out_16_V_reg_1384 <= call_ret2_relu_1_fu_395_ap_return_16;
        layer4_out_17_V_reg_1389 <= call_ret2_relu_1_fu_395_ap_return_17;
        layer4_out_18_V_reg_1394 <= call_ret2_relu_1_fu_395_ap_return_18;
        layer4_out_19_V_reg_1399 <= call_ret2_relu_1_fu_395_ap_return_19;
        layer4_out_1_V_reg_1309 <= call_ret2_relu_1_fu_395_ap_return_1;
        layer4_out_20_V_reg_1404 <= call_ret2_relu_1_fu_395_ap_return_20;
        layer4_out_21_V_reg_1409 <= call_ret2_relu_1_fu_395_ap_return_21;
        layer4_out_22_V_reg_1414 <= call_ret2_relu_1_fu_395_ap_return_22;
        layer4_out_23_V_reg_1419 <= call_ret2_relu_1_fu_395_ap_return_23;
        layer4_out_24_V_reg_1424 <= call_ret2_relu_1_fu_395_ap_return_24;
        layer4_out_2_V_reg_1314 <= call_ret2_relu_1_fu_395_ap_return_2;
        layer4_out_3_V_reg_1319 <= call_ret2_relu_1_fu_395_ap_return_3;
        layer4_out_4_V_reg_1324 <= call_ret2_relu_1_fu_395_ap_return_4;
        layer4_out_5_V_reg_1329 <= call_ret2_relu_1_fu_395_ap_return_5;
        layer4_out_6_V_reg_1334 <= call_ret2_relu_1_fu_395_ap_return_6;
        layer4_out_7_V_reg_1339 <= call_ret2_relu_1_fu_395_ap_return_7;
        layer4_out_8_V_reg_1344 <= call_ret2_relu_1_fu_395_ap_return_8;
        layer4_out_9_V_reg_1349 <= call_ret2_relu_1_fu_395_ap_return_9;
        layer7_out_0_V_reg_1429 <= call_ret4_relu_fu_440_ap_return_0;
        layer7_out_10_V_reg_1479 <= call_ret4_relu_fu_440_ap_return_10;
        layer7_out_11_V_reg_1484 <= call_ret4_relu_fu_440_ap_return_11;
        layer7_out_1_V_reg_1434 <= call_ret4_relu_fu_440_ap_return_1;
        layer7_out_2_V_reg_1439 <= call_ret4_relu_fu_440_ap_return_2;
        layer7_out_3_V_reg_1444 <= call_ret4_relu_fu_440_ap_return_3;
        layer7_out_4_V_reg_1449 <= call_ret4_relu_fu_440_ap_return_4;
        layer7_out_5_V_reg_1454 <= call_ret4_relu_fu_440_ap_return_5;
        layer7_out_6_V_reg_1459 <= call_ret4_relu_fu_440_ap_return_6;
        layer7_out_7_V_reg_1464 <= call_ret4_relu_fu_440_ap_return_7;
        layer7_out_8_V_reg_1469 <= call_ret4_relu_fu_440_ap_return_8;
        layer7_out_9_V_reg_1474 <= call_ret4_relu_fu_440_ap_return_9;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        const_size_in_1_ap_vld = 1'b1;
    end else begin
        const_size_in_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        const_size_out_1_ap_vld = 1'b1;
    end else begin
        const_size_out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce0 = 1'b1;
    end else begin
        exp_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce1 = 1'b1;
    end else begin
        exp_table3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce10 = 1'b1;
    end else begin
        exp_table3_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce11 = 1'b1;
    end else begin
        exp_table3_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce2 = 1'b1;
    end else begin
        exp_table3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce3 = 1'b1;
    end else begin
        exp_table3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce4 = 1'b1;
    end else begin
        exp_table3_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce5 = 1'b1;
    end else begin
        exp_table3_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce6 = 1'b1;
    end else begin
        exp_table3_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce7 = 1'b1;
    end else begin
        exp_table3_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce8 = 1'b1;
    end else begin
        exp_table3_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_table3_ce9 = 1'b1;
    end else begin
        exp_table3_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((input_V_ap_vld == 1'b1)) begin
        input_V_ap_vld_in_sig = input_V_ap_vld;
    end else begin
        input_V_ap_vld_in_sig = input_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        input_V_blk_n = input_V_ap_vld;
    end else begin
        input_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((input_V_ap_vld == 1'b1)) begin
        input_V_in_sig = input_V;
    end else begin
        input_V_in_sig = input_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        invert_table4_ce0 = 1'b1;
    end else begin
        invert_table4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_0_V_ap_vld = 1'b1;
    end else begin
        layer11_out_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_10_V_ap_vld = 1'b1;
    end else begin
        layer11_out_10_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_11_V_ap_vld = 1'b1;
    end else begin
        layer11_out_11_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_1_V_ap_vld = 1'b1;
    end else begin
        layer11_out_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_2_V_ap_vld = 1'b1;
    end else begin
        layer11_out_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_3_V_ap_vld = 1'b1;
    end else begin
        layer11_out_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_4_V_ap_vld = 1'b1;
    end else begin
        layer11_out_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_5_V_ap_vld = 1'b1;
    end else begin
        layer11_out_5_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_6_V_ap_vld = 1'b1;
    end else begin
        layer11_out_6_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_7_V_ap_vld = 1'b1;
    end else begin
        layer11_out_7_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_8_V_ap_vld = 1'b1;
    end else begin
        layer11_out_8_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layer11_out_9_V_ap_vld = 1'b1;
    end else begin
        layer11_out_9_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign const_size_in_1 = 16'd8;

assign const_size_out_1 = 16'd12;

assign exp_table3_address0 = zext_ln250_fu_875_p1;

assign exp_table3_address1 = zext_ln250_1_fu_890_p1;

assign exp_table3_address10 = zext_ln250_10_fu_1025_p1;

assign exp_table3_address11 = zext_ln250_11_fu_1040_p1;

assign exp_table3_address2 = zext_ln250_2_fu_905_p1;

assign exp_table3_address3 = zext_ln250_3_fu_920_p1;

assign exp_table3_address4 = zext_ln250_4_fu_935_p1;

assign exp_table3_address5 = zext_ln250_5_fu_950_p1;

assign exp_table3_address6 = zext_ln250_6_fu_965_p1;

assign exp_table3_address7 = zext_ln250_7_fu_980_p1;

assign exp_table3_address8 = zext_ln250_8_fu_995_p1;

assign exp_table3_address9 = zext_ln250_9_fu_1010_p1;

assign invert_table4_address0 = zext_ln258_fu_1055_p1;

assign layer11_out_0_V = {{mul_ln1118_fu_1220_p2[20:11]}};

assign layer11_out_10_V = {{mul_ln1118_10_fu_1290_p2[20:11]}};

assign layer11_out_11_V = {{mul_ln1118_11_fu_1297_p2[20:11]}};

assign layer11_out_1_V = {{mul_ln1118_1_fu_1227_p2[20:11]}};

assign layer11_out_2_V = {{mul_ln1118_2_fu_1234_p2[20:11]}};

assign layer11_out_3_V = {{mul_ln1118_3_fu_1241_p2[20:11]}};

assign layer11_out_4_V = {{mul_ln1118_4_fu_1248_p2[20:11]}};

assign layer11_out_5_V = {{mul_ln1118_5_fu_1255_p2[20:11]}};

assign layer11_out_6_V = {{mul_ln1118_6_fu_1262_p2[20:11]}};

assign layer11_out_7_V = {{mul_ln1118_7_fu_1269_p2[20:11]}};

assign layer11_out_8_V = {{mul_ln1118_8_fu_1276_p2[20:11]}};

assign layer11_out_9_V = {{mul_ln1118_9_fu_1283_p2[20:11]}};

assign mul_ln1118_10_fu_1290_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_10_fu_1290_p1 = mul_ln1118_10_fu_1290_p10;

assign mul_ln1118_10_fu_1290_p10 = exp_res_10_V_reg_1599;

assign mul_ln1118_11_fu_1297_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_11_fu_1297_p1 = mul_ln1118_11_fu_1297_p10;

assign mul_ln1118_11_fu_1297_p10 = exp_res_11_V_reg_1604;

assign mul_ln1118_1_fu_1227_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_1_fu_1227_p1 = mul_ln1118_1_fu_1227_p10;

assign mul_ln1118_1_fu_1227_p10 = exp_res_1_V_reg_1554;

assign mul_ln1118_2_fu_1234_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_2_fu_1234_p1 = mul_ln1118_2_fu_1234_p10;

assign mul_ln1118_2_fu_1234_p10 = exp_res_2_V_reg_1559;

assign mul_ln1118_3_fu_1241_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_3_fu_1241_p1 = mul_ln1118_3_fu_1241_p10;

assign mul_ln1118_3_fu_1241_p10 = exp_res_3_V_reg_1564;

assign mul_ln1118_4_fu_1248_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_4_fu_1248_p1 = mul_ln1118_4_fu_1248_p10;

assign mul_ln1118_4_fu_1248_p10 = exp_res_4_V_reg_1569;

assign mul_ln1118_5_fu_1255_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_5_fu_1255_p1 = mul_ln1118_5_fu_1255_p10;

assign mul_ln1118_5_fu_1255_p10 = exp_res_5_V_reg_1574;

assign mul_ln1118_6_fu_1262_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_6_fu_1262_p1 = mul_ln1118_6_fu_1262_p10;

assign mul_ln1118_6_fu_1262_p10 = exp_res_6_V_reg_1579;

assign mul_ln1118_7_fu_1269_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_7_fu_1269_p1 = mul_ln1118_7_fu_1269_p10;

assign mul_ln1118_7_fu_1269_p10 = exp_res_7_V_reg_1584;

assign mul_ln1118_8_fu_1276_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_8_fu_1276_p1 = mul_ln1118_8_fu_1276_p10;

assign mul_ln1118_8_fu_1276_p10 = exp_res_8_V_reg_1589;

assign mul_ln1118_9_fu_1283_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_9_fu_1283_p1 = mul_ln1118_9_fu_1283_p10;

assign mul_ln1118_9_fu_1283_p10 = exp_res_9_V_reg_1594;

assign mul_ln1118_fu_1220_p0 = sext_ln1116_fu_1060_p1;

assign mul_ln1118_fu_1220_p1 = mul_ln1118_fu_1220_p10;

assign mul_ln1118_fu_1220_p10 = exp_res_0_V_reg_1549;

assign sext_ln1116_fu_1060_p1 = $signed(invert_table4_q0);

assign y_V_10_fu_1015_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_10[15:6]}};

assign y_V_11_fu_1030_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_11[15:6]}};

assign y_V_12_fu_1045_p4 = {{exp_sum_V_reduce_fu_456_ap_return[17:8]}};

assign y_V_1_fu_880_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_1[15:6]}};

assign y_V_2_fu_895_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_2[15:6]}};

assign y_V_3_fu_910_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_3[15:6]}};

assign y_V_4_fu_925_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_4[15:6]}};

assign y_V_5_fu_940_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_5[15:6]}};

assign y_V_6_fu_955_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_6[15:6]}};

assign y_V_7_fu_970_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_7[15:6]}};

assign y_V_8_fu_985_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_8[15:6]}};

assign y_V_9_fu_1000_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_9[15:6]}};

assign y_V_fu_865_p4 = {{call_ret5_conv_1d_latency_cl_0_fu_424_ap_return_0[15:6]}};

assign zext_ln250_10_fu_1025_p1 = y_V_10_fu_1015_p4;

assign zext_ln250_11_fu_1040_p1 = y_V_11_fu_1030_p4;

assign zext_ln250_1_fu_890_p1 = y_V_1_fu_880_p4;

assign zext_ln250_2_fu_905_p1 = y_V_2_fu_895_p4;

assign zext_ln250_3_fu_920_p1 = y_V_3_fu_910_p4;

assign zext_ln250_4_fu_935_p1 = y_V_4_fu_925_p4;

assign zext_ln250_5_fu_950_p1 = y_V_5_fu_940_p4;

assign zext_ln250_6_fu_965_p1 = y_V_6_fu_955_p4;

assign zext_ln250_7_fu_980_p1 = y_V_7_fu_970_p4;

assign zext_ln250_8_fu_995_p1 = y_V_8_fu_985_p4;

assign zext_ln250_9_fu_1010_p1 = y_V_9_fu_1000_p4;

assign zext_ln250_fu_875_p1 = y_V_fu_865_p4;

assign zext_ln258_fu_1055_p1 = y_V_12_fu_1045_p4;

endmodule //disambiguation_network
