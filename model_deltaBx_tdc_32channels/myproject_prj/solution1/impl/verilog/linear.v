// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module linear (
        ap_ready,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);


output   ap_ready;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
output  [6:0] ap_return_0;
output  [6:0] ap_return_1;
output  [6:0] ap_return_2;
output  [6:0] ap_return_3;

wire   [0:0] tmp_259_fu_114_p3;
wire   [6:0] zext_ln415_fu_122_p1;
wire   [6:0] trunc_ln_fu_96_p4;
wire   [6:0] add_ln415_fu_126_p2;
wire   [0:0] tmp_260_fu_132_p3;
wire   [0:0] tmp_258_fu_106_p3;
wire   [0:0] xor_ln416_fu_140_p2;
wire   [2:0] p_Result_s_fu_160_p4;
wire   [3:0] p_Result_1_fu_176_p4;
wire   [0:0] and_ln416_fu_146_p2;
wire   [0:0] icmp_ln879_32_fu_186_p2;
wire   [0:0] icmp_ln768_fu_192_p2;
wire   [0:0] tmp_262_fu_206_p3;
wire   [0:0] icmp_ln879_fu_170_p2;
wire   [0:0] xor_ln779_fu_214_p2;
wire   [0:0] and_ln779_fu_220_p2;
wire   [0:0] select_ln777_fu_198_p3;
wire   [0:0] tmp_261_fu_152_p3;
wire   [0:0] xor_ln785_fu_240_p2;
wire   [0:0] tmp_257_fu_88_p3;
wire   [0:0] or_ln785_fu_246_p2;
wire   [0:0] xor_ln785_32_fu_252_p2;
wire   [0:0] select_ln416_fu_226_p3;
wire   [0:0] and_ln781_fu_234_p2;
wire   [0:0] and_ln786_fu_264_p2;
wire   [0:0] or_ln786_fu_270_p2;
wire   [0:0] xor_ln786_fu_276_p2;
wire   [0:0] and_ln786_4_fu_282_p2;
wire   [0:0] and_ln785_fu_258_p2;
wire   [0:0] or_ln340_33_fu_294_p2;
wire   [0:0] or_ln340_fu_288_p2;
wire   [0:0] or_ln340_32_fu_300_p2;
wire   [6:0] select_ln340_fu_306_p3;
wire   [6:0] select_ln388_fu_314_p3;
wire   [0:0] tmp_265_fu_356_p3;
wire   [6:0] zext_ln415_64_fu_364_p1;
wire   [6:0] trunc_ln708_s_fu_338_p4;
wire   [6:0] add_ln415_32_fu_368_p2;
wire   [0:0] tmp_266_fu_374_p3;
wire   [0:0] tmp_264_fu_348_p3;
wire   [0:0] xor_ln416_62_fu_382_p2;
wire   [2:0] p_Result_15_1_fu_402_p4;
wire   [3:0] p_Result_16_1_fu_418_p4;
wire   [0:0] and_ln416_32_fu_388_p2;
wire   [0:0] icmp_ln879_34_fu_428_p2;
wire   [0:0] icmp_ln768_32_fu_434_p2;
wire   [0:0] tmp_268_fu_448_p3;
wire   [0:0] icmp_ln879_33_fu_412_p2;
wire   [0:0] xor_ln779_1_fu_456_p2;
wire   [0:0] and_ln779_1_fu_462_p2;
wire   [0:0] select_ln777_32_fu_440_p3;
wire   [0:0] tmp_267_fu_394_p3;
wire   [0:0] xor_ln785_1_fu_482_p2;
wire   [0:0] tmp_263_fu_330_p3;
wire   [0:0] or_ln785_1_fu_488_p2;
wire   [0:0] xor_ln785_33_fu_494_p2;
wire   [0:0] select_ln416_1_fu_468_p3;
wire   [0:0] and_ln781_1_fu_476_p2;
wire   [0:0] and_ln786_1_fu_506_p2;
wire   [0:0] or_ln786_1_fu_512_p2;
wire   [0:0] xor_ln786_1_fu_518_p2;
wire   [0:0] and_ln786_5_fu_524_p2;
wire   [0:0] and_ln785_1_fu_500_p2;
wire   [0:0] or_ln340_35_fu_536_p2;
wire   [0:0] or_ln340_1_fu_530_p2;
wire   [0:0] or_ln340_34_fu_542_p2;
wire   [6:0] select_ln340_1_fu_548_p3;
wire   [6:0] select_ln388_1_fu_556_p3;
wire   [0:0] tmp_271_fu_598_p3;
wire   [6:0] zext_ln415_65_fu_606_p1;
wire   [6:0] trunc_ln708_31_fu_580_p4;
wire   [6:0] add_ln415_33_fu_610_p2;
wire   [0:0] tmp_272_fu_616_p3;
wire   [0:0] tmp_270_fu_590_p3;
wire   [0:0] xor_ln416_63_fu_624_p2;
wire   [2:0] p_Result_15_2_fu_644_p4;
wire   [3:0] p_Result_16_2_fu_660_p4;
wire   [0:0] and_ln416_33_fu_630_p2;
wire   [0:0] icmp_ln879_36_fu_670_p2;
wire   [0:0] icmp_ln768_33_fu_676_p2;
wire   [0:0] tmp_274_fu_690_p3;
wire   [0:0] icmp_ln879_35_fu_654_p2;
wire   [0:0] xor_ln779_2_fu_698_p2;
wire   [0:0] and_ln779_2_fu_704_p2;
wire   [0:0] select_ln777_33_fu_682_p3;
wire   [0:0] tmp_273_fu_636_p3;
wire   [0:0] xor_ln785_2_fu_724_p2;
wire   [0:0] tmp_269_fu_572_p3;
wire   [0:0] or_ln785_2_fu_730_p2;
wire   [0:0] xor_ln785_34_fu_736_p2;
wire   [0:0] select_ln416_2_fu_710_p3;
wire   [0:0] and_ln781_2_fu_718_p2;
wire   [0:0] and_ln786_2_fu_748_p2;
wire   [0:0] or_ln786_2_fu_754_p2;
wire   [0:0] xor_ln786_2_fu_760_p2;
wire   [0:0] and_ln786_6_fu_766_p2;
wire   [0:0] and_ln785_2_fu_742_p2;
wire   [0:0] or_ln340_37_fu_778_p2;
wire   [0:0] or_ln340_2_fu_772_p2;
wire   [0:0] or_ln340_36_fu_784_p2;
wire   [6:0] select_ln340_2_fu_790_p3;
wire   [6:0] select_ln388_2_fu_798_p3;
wire   [0:0] tmp_277_fu_840_p3;
wire   [6:0] zext_ln415_66_fu_848_p1;
wire   [6:0] trunc_ln708_32_fu_822_p4;
wire   [6:0] add_ln415_34_fu_852_p2;
wire   [0:0] tmp_278_fu_858_p3;
wire   [0:0] tmp_276_fu_832_p3;
wire   [0:0] xor_ln416_64_fu_866_p2;
wire   [2:0] p_Result_15_3_fu_886_p4;
wire   [3:0] p_Result_16_3_fu_902_p4;
wire   [0:0] and_ln416_34_fu_872_p2;
wire   [0:0] icmp_ln879_38_fu_912_p2;
wire   [0:0] icmp_ln768_34_fu_918_p2;
wire   [0:0] tmp_280_fu_932_p3;
wire   [0:0] icmp_ln879_37_fu_896_p2;
wire   [0:0] xor_ln779_3_fu_940_p2;
wire   [0:0] and_ln779_3_fu_946_p2;
wire   [0:0] select_ln777_34_fu_924_p3;
wire   [0:0] tmp_279_fu_878_p3;
wire   [0:0] xor_ln785_3_fu_966_p2;
wire   [0:0] tmp_275_fu_814_p3;
wire   [0:0] or_ln785_3_fu_972_p2;
wire   [0:0] xor_ln785_35_fu_978_p2;
wire   [0:0] select_ln416_3_fu_952_p3;
wire   [0:0] and_ln781_3_fu_960_p2;
wire   [0:0] and_ln786_3_fu_990_p2;
wire   [0:0] or_ln786_3_fu_996_p2;
wire   [0:0] xor_ln786_3_fu_1002_p2;
wire   [0:0] and_ln786_7_fu_1008_p2;
wire   [0:0] and_ln785_3_fu_984_p2;
wire   [0:0] or_ln340_39_fu_1020_p2;
wire   [0:0] or_ln340_3_fu_1014_p2;
wire   [0:0] or_ln340_38_fu_1026_p2;
wire   [6:0] select_ln340_3_fu_1032_p3;
wire   [6:0] select_ln388_3_fu_1040_p3;
wire   [6:0] select_ln340_32_fu_322_p3;
wire   [6:0] select_ln340_33_fu_564_p3;
wire   [6:0] select_ln340_34_fu_806_p3;
wire   [6:0] select_ln340_35_fu_1048_p3;

assign add_ln415_32_fu_368_p2 = (zext_ln415_64_fu_364_p1 + trunc_ln708_s_fu_338_p4);

assign add_ln415_33_fu_610_p2 = (zext_ln415_65_fu_606_p1 + trunc_ln708_31_fu_580_p4);

assign add_ln415_34_fu_852_p2 = (zext_ln415_66_fu_848_p1 + trunc_ln708_32_fu_822_p4);

assign add_ln415_fu_126_p2 = (zext_ln415_fu_122_p1 + trunc_ln_fu_96_p4);

assign and_ln416_32_fu_388_p2 = (xor_ln416_62_fu_382_p2 & tmp_264_fu_348_p3);

assign and_ln416_33_fu_630_p2 = (xor_ln416_63_fu_624_p2 & tmp_270_fu_590_p3);

assign and_ln416_34_fu_872_p2 = (xor_ln416_64_fu_866_p2 & tmp_276_fu_832_p3);

assign and_ln416_fu_146_p2 = (xor_ln416_fu_140_p2 & tmp_258_fu_106_p3);

assign and_ln779_1_fu_462_p2 = (xor_ln779_1_fu_456_p2 & icmp_ln879_33_fu_412_p2);

assign and_ln779_2_fu_704_p2 = (xor_ln779_2_fu_698_p2 & icmp_ln879_35_fu_654_p2);

assign and_ln779_3_fu_946_p2 = (xor_ln779_3_fu_940_p2 & icmp_ln879_37_fu_896_p2);

assign and_ln779_fu_220_p2 = (xor_ln779_fu_214_p2 & icmp_ln879_fu_170_p2);

assign and_ln781_1_fu_476_p2 = (icmp_ln879_34_fu_428_p2 & and_ln416_32_fu_388_p2);

assign and_ln781_2_fu_718_p2 = (icmp_ln879_36_fu_670_p2 & and_ln416_33_fu_630_p2);

assign and_ln781_3_fu_960_p2 = (icmp_ln879_38_fu_912_p2 & and_ln416_34_fu_872_p2);

assign and_ln781_fu_234_p2 = (icmp_ln879_32_fu_186_p2 & and_ln416_fu_146_p2);

assign and_ln785_1_fu_500_p2 = (xor_ln785_33_fu_494_p2 & or_ln785_1_fu_488_p2);

assign and_ln785_2_fu_742_p2 = (xor_ln785_34_fu_736_p2 & or_ln785_2_fu_730_p2);

assign and_ln785_3_fu_984_p2 = (xor_ln785_35_fu_978_p2 & or_ln785_3_fu_972_p2);

assign and_ln785_fu_258_p2 = (xor_ln785_32_fu_252_p2 & or_ln785_fu_246_p2);

assign and_ln786_1_fu_506_p2 = (tmp_267_fu_394_p3 & select_ln416_1_fu_468_p3);

assign and_ln786_2_fu_748_p2 = (tmp_273_fu_636_p3 & select_ln416_2_fu_710_p3);

assign and_ln786_3_fu_990_p2 = (tmp_279_fu_878_p3 & select_ln416_3_fu_952_p3);

assign and_ln786_4_fu_282_p2 = (xor_ln786_fu_276_p2 & tmp_257_fu_88_p3);

assign and_ln786_5_fu_524_p2 = (xor_ln786_1_fu_518_p2 & tmp_263_fu_330_p3);

assign and_ln786_6_fu_766_p2 = (xor_ln786_2_fu_760_p2 & tmp_269_fu_572_p3);

assign and_ln786_7_fu_1008_p2 = (xor_ln786_3_fu_1002_p2 & tmp_275_fu_814_p3);

assign and_ln786_fu_264_p2 = (tmp_261_fu_152_p3 & select_ln416_fu_226_p3);

assign ap_ready = 1'b1;

assign ap_return_0 = select_ln340_32_fu_322_p3;

assign ap_return_1 = select_ln340_33_fu_564_p3;

assign ap_return_2 = select_ln340_34_fu_806_p3;

assign ap_return_3 = select_ln340_35_fu_1048_p3;

assign icmp_ln768_32_fu_434_p2 = ((p_Result_16_1_fu_418_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_33_fu_676_p2 = ((p_Result_16_2_fu_660_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_34_fu_918_p2 = ((p_Result_16_3_fu_902_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln768_fu_192_p2 = ((p_Result_1_fu_176_p4 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_32_fu_186_p2 = ((p_Result_1_fu_176_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_33_fu_412_p2 = ((p_Result_15_1_fu_402_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_34_fu_428_p2 = ((p_Result_16_1_fu_418_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_35_fu_654_p2 = ((p_Result_15_2_fu_644_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_36_fu_670_p2 = ((p_Result_16_2_fu_660_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_37_fu_896_p2 = ((p_Result_15_3_fu_886_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_38_fu_912_p2 = ((p_Result_16_3_fu_902_p4 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_170_p2 = ((p_Result_s_fu_160_p4 == 3'd7) ? 1'b1 : 1'b0);

assign or_ln340_1_fu_530_p2 = (and_ln786_5_fu_524_p2 | and_ln785_1_fu_500_p2);

assign or_ln340_2_fu_772_p2 = (and_ln786_6_fu_766_p2 | and_ln785_2_fu_742_p2);

assign or_ln340_32_fu_300_p2 = (or_ln340_33_fu_294_p2 | and_ln781_fu_234_p2);

assign or_ln340_33_fu_294_p2 = (xor_ln785_32_fu_252_p2 | and_ln786_fu_264_p2);

assign or_ln340_34_fu_542_p2 = (or_ln340_35_fu_536_p2 | and_ln781_1_fu_476_p2);

assign or_ln340_35_fu_536_p2 = (xor_ln785_33_fu_494_p2 | and_ln786_1_fu_506_p2);

assign or_ln340_36_fu_784_p2 = (or_ln340_37_fu_778_p2 | and_ln781_2_fu_718_p2);

assign or_ln340_37_fu_778_p2 = (xor_ln785_34_fu_736_p2 | and_ln786_2_fu_748_p2);

assign or_ln340_38_fu_1026_p2 = (or_ln340_39_fu_1020_p2 | and_ln781_3_fu_960_p2);

assign or_ln340_39_fu_1020_p2 = (xor_ln785_35_fu_978_p2 | and_ln786_3_fu_990_p2);

assign or_ln340_3_fu_1014_p2 = (and_ln786_7_fu_1008_p2 | and_ln785_3_fu_984_p2);

assign or_ln340_fu_288_p2 = (and_ln786_4_fu_282_p2 | and_ln785_fu_258_p2);

assign or_ln785_1_fu_488_p2 = (xor_ln785_1_fu_482_p2 | tmp_267_fu_394_p3);

assign or_ln785_2_fu_730_p2 = (xor_ln785_2_fu_724_p2 | tmp_273_fu_636_p3);

assign or_ln785_3_fu_972_p2 = (xor_ln785_3_fu_966_p2 | tmp_279_fu_878_p3);

assign or_ln785_fu_246_p2 = (xor_ln785_fu_240_p2 | tmp_261_fu_152_p3);

assign or_ln786_1_fu_512_p2 = (and_ln786_1_fu_506_p2 | and_ln781_1_fu_476_p2);

assign or_ln786_2_fu_754_p2 = (and_ln786_2_fu_748_p2 | and_ln781_2_fu_718_p2);

assign or_ln786_3_fu_996_p2 = (and_ln786_3_fu_990_p2 | and_ln781_3_fu_960_p2);

assign or_ln786_fu_270_p2 = (and_ln786_fu_264_p2 | and_ln781_fu_234_p2);

assign p_Result_15_1_fu_402_p4 = {{data_1_V_read[15:13]}};

assign p_Result_15_2_fu_644_p4 = {{data_2_V_read[15:13]}};

assign p_Result_15_3_fu_886_p4 = {{data_3_V_read[15:13]}};

assign p_Result_16_1_fu_418_p4 = {{data_1_V_read[15:12]}};

assign p_Result_16_2_fu_660_p4 = {{data_2_V_read[15:12]}};

assign p_Result_16_3_fu_902_p4 = {{data_3_V_read[15:12]}};

assign p_Result_1_fu_176_p4 = {{data_0_V_read[15:12]}};

assign p_Result_s_fu_160_p4 = {{data_0_V_read[15:13]}};

assign select_ln340_1_fu_548_p3 = ((or_ln340_1_fu_530_p2[0:0] === 1'b1) ? 7'd63 : add_ln415_32_fu_368_p2);

assign select_ln340_2_fu_790_p3 = ((or_ln340_2_fu_772_p2[0:0] === 1'b1) ? 7'd63 : add_ln415_33_fu_610_p2);

assign select_ln340_32_fu_322_p3 = ((or_ln340_32_fu_300_p2[0:0] === 1'b1) ? select_ln340_fu_306_p3 : select_ln388_fu_314_p3);

assign select_ln340_33_fu_564_p3 = ((or_ln340_34_fu_542_p2[0:0] === 1'b1) ? select_ln340_1_fu_548_p3 : select_ln388_1_fu_556_p3);

assign select_ln340_34_fu_806_p3 = ((or_ln340_36_fu_784_p2[0:0] === 1'b1) ? select_ln340_2_fu_790_p3 : select_ln388_2_fu_798_p3);

assign select_ln340_35_fu_1048_p3 = ((or_ln340_38_fu_1026_p2[0:0] === 1'b1) ? select_ln340_3_fu_1032_p3 : select_ln388_3_fu_1040_p3);

assign select_ln340_3_fu_1032_p3 = ((or_ln340_3_fu_1014_p2[0:0] === 1'b1) ? 7'd63 : add_ln415_34_fu_852_p2);

assign select_ln340_fu_306_p3 = ((or_ln340_fu_288_p2[0:0] === 1'b1) ? 7'd63 : add_ln415_fu_126_p2);

assign select_ln388_1_fu_556_p3 = ((and_ln786_5_fu_524_p2[0:0] === 1'b1) ? 7'd64 : add_ln415_32_fu_368_p2);

assign select_ln388_2_fu_798_p3 = ((and_ln786_6_fu_766_p2[0:0] === 1'b1) ? 7'd64 : add_ln415_33_fu_610_p2);

assign select_ln388_3_fu_1040_p3 = ((and_ln786_7_fu_1008_p2[0:0] === 1'b1) ? 7'd64 : add_ln415_34_fu_852_p2);

assign select_ln388_fu_314_p3 = ((and_ln786_4_fu_282_p2[0:0] === 1'b1) ? 7'd64 : add_ln415_fu_126_p2);

assign select_ln416_1_fu_468_p3 = ((and_ln416_32_fu_388_p2[0:0] === 1'b1) ? and_ln779_1_fu_462_p2 : icmp_ln879_34_fu_428_p2);

assign select_ln416_2_fu_710_p3 = ((and_ln416_33_fu_630_p2[0:0] === 1'b1) ? and_ln779_2_fu_704_p2 : icmp_ln879_36_fu_670_p2);

assign select_ln416_3_fu_952_p3 = ((and_ln416_34_fu_872_p2[0:0] === 1'b1) ? and_ln779_3_fu_946_p2 : icmp_ln879_38_fu_912_p2);

assign select_ln416_fu_226_p3 = ((and_ln416_fu_146_p2[0:0] === 1'b1) ? and_ln779_fu_220_p2 : icmp_ln879_32_fu_186_p2);

assign select_ln777_32_fu_440_p3 = ((and_ln416_32_fu_388_p2[0:0] === 1'b1) ? icmp_ln879_34_fu_428_p2 : icmp_ln768_32_fu_434_p2);

assign select_ln777_33_fu_682_p3 = ((and_ln416_33_fu_630_p2[0:0] === 1'b1) ? icmp_ln879_36_fu_670_p2 : icmp_ln768_33_fu_676_p2);

assign select_ln777_34_fu_924_p3 = ((and_ln416_34_fu_872_p2[0:0] === 1'b1) ? icmp_ln879_38_fu_912_p2 : icmp_ln768_34_fu_918_p2);

assign select_ln777_fu_198_p3 = ((and_ln416_fu_146_p2[0:0] === 1'b1) ? icmp_ln879_32_fu_186_p2 : icmp_ln768_fu_192_p2);

assign tmp_257_fu_88_p3 = data_0_V_read[32'd15];

assign tmp_258_fu_106_p3 = data_0_V_read[32'd11];

assign tmp_259_fu_114_p3 = data_0_V_read[32'd4];

assign tmp_260_fu_132_p3 = add_ln415_fu_126_p2[32'd6];

assign tmp_261_fu_152_p3 = add_ln415_fu_126_p2[32'd6];

assign tmp_262_fu_206_p3 = data_0_V_read[32'd12];

assign tmp_263_fu_330_p3 = data_1_V_read[32'd15];

assign tmp_264_fu_348_p3 = data_1_V_read[32'd11];

assign tmp_265_fu_356_p3 = data_1_V_read[32'd4];

assign tmp_266_fu_374_p3 = add_ln415_32_fu_368_p2[32'd6];

assign tmp_267_fu_394_p3 = add_ln415_32_fu_368_p2[32'd6];

assign tmp_268_fu_448_p3 = data_1_V_read[32'd12];

assign tmp_269_fu_572_p3 = data_2_V_read[32'd15];

assign tmp_270_fu_590_p3 = data_2_V_read[32'd11];

assign tmp_271_fu_598_p3 = data_2_V_read[32'd4];

assign tmp_272_fu_616_p3 = add_ln415_33_fu_610_p2[32'd6];

assign tmp_273_fu_636_p3 = add_ln415_33_fu_610_p2[32'd6];

assign tmp_274_fu_690_p3 = data_2_V_read[32'd12];

assign tmp_275_fu_814_p3 = data_3_V_read[32'd15];

assign tmp_276_fu_832_p3 = data_3_V_read[32'd11];

assign tmp_277_fu_840_p3 = data_3_V_read[32'd4];

assign tmp_278_fu_858_p3 = add_ln415_34_fu_852_p2[32'd6];

assign tmp_279_fu_878_p3 = add_ln415_34_fu_852_p2[32'd6];

assign tmp_280_fu_932_p3 = data_3_V_read[32'd12];

assign trunc_ln708_31_fu_580_p4 = {{data_2_V_read[11:5]}};

assign trunc_ln708_32_fu_822_p4 = {{data_3_V_read[11:5]}};

assign trunc_ln708_s_fu_338_p4 = {{data_1_V_read[11:5]}};

assign trunc_ln_fu_96_p4 = {{data_0_V_read[11:5]}};

assign xor_ln416_62_fu_382_p2 = (tmp_266_fu_374_p3 ^ 1'd1);

assign xor_ln416_63_fu_624_p2 = (tmp_272_fu_616_p3 ^ 1'd1);

assign xor_ln416_64_fu_866_p2 = (tmp_278_fu_858_p3 ^ 1'd1);

assign xor_ln416_fu_140_p2 = (tmp_260_fu_132_p3 ^ 1'd1);

assign xor_ln779_1_fu_456_p2 = (tmp_268_fu_448_p3 ^ 1'd1);

assign xor_ln779_2_fu_698_p2 = (tmp_274_fu_690_p3 ^ 1'd1);

assign xor_ln779_3_fu_940_p2 = (tmp_280_fu_932_p3 ^ 1'd1);

assign xor_ln779_fu_214_p2 = (tmp_262_fu_206_p3 ^ 1'd1);

assign xor_ln785_1_fu_482_p2 = (select_ln777_32_fu_440_p3 ^ 1'd1);

assign xor_ln785_2_fu_724_p2 = (select_ln777_33_fu_682_p3 ^ 1'd1);

assign xor_ln785_32_fu_252_p2 = (tmp_257_fu_88_p3 ^ 1'd1);

assign xor_ln785_33_fu_494_p2 = (tmp_263_fu_330_p3 ^ 1'd1);

assign xor_ln785_34_fu_736_p2 = (tmp_269_fu_572_p3 ^ 1'd1);

assign xor_ln785_35_fu_978_p2 = (tmp_275_fu_814_p3 ^ 1'd1);

assign xor_ln785_3_fu_966_p2 = (select_ln777_34_fu_924_p3 ^ 1'd1);

assign xor_ln785_fu_240_p2 = (select_ln777_fu_198_p3 ^ 1'd1);

assign xor_ln786_1_fu_518_p2 = (or_ln786_1_fu_512_p2 ^ 1'd1);

assign xor_ln786_2_fu_760_p2 = (or_ln786_2_fu_754_p2 ^ 1'd1);

assign xor_ln786_3_fu_1002_p2 = (or_ln786_3_fu_996_p2 ^ 1'd1);

assign xor_ln786_fu_276_p2 = (or_ln786_fu_270_p2 ^ 1'd1);

assign zext_ln415_64_fu_364_p1 = tmp_265_fu_356_p3;

assign zext_ln415_65_fu_606_p1 = tmp_271_fu_598_p3;

assign zext_ln415_66_fu_848_p1 = tmp_277_fu_840_p3;

assign zext_ln415_fu_122_p1 = tmp_259_fu_114_p3;

endmodule //linear
