// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flvb2104-2-i,HLS_INPUT_CLOCK=12.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=9.957750,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=8,HLS_SYN_DSP=114,HLS_SYN_FF=712,HLS_SYN_LUT=17495,HLS_VERSION=2020_1}" *)

module myproject (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_ap_vld,
        input_V,
        layer8_out_0_V,
        layer8_out_0_V_ap_vld,
        layer8_out_1_V,
        layer8_out_1_V_ap_vld,
        layer8_out_2_V,
        layer8_out_2_V_ap_vld,
        layer8_out_3_V,
        layer8_out_3_V_ap_vld,
        layer8_out_4_V,
        layer8_out_4_V_ap_vld,
        layer8_out_5_V,
        layer8_out_5_V_ap_vld,
        layer8_out_6_V,
        layer8_out_6_V_ap_vld,
        layer8_out_7_V,
        layer8_out_7_V_ap_vld,
        layer8_out_8_V,
        layer8_out_8_V_ap_vld,
        layer8_out_9_V,
        layer8_out_9_V_ap_vld,
        layer8_out_10_V,
        layer8_out_10_V_ap_vld,
        layer8_out_11_V,
        layer8_out_11_V_ap_vld,
        layer8_out_12_V,
        layer8_out_12_V_ap_vld,
        layer8_out_13_V,
        layer8_out_13_V_ap_vld,
        layer8_out_14_V,
        layer8_out_14_V_ap_vld,
        layer8_out_15_V,
        layer8_out_15_V_ap_vld,
        const_size_in_1,
        const_size_in_1_ap_vld,
        const_size_out_1,
        const_size_out_1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   input_V_ap_vld;
input  [191:0] input_V;
output  [15:0] layer8_out_0_V;
output   layer8_out_0_V_ap_vld;
output  [15:0] layer8_out_1_V;
output   layer8_out_1_V_ap_vld;
output  [15:0] layer8_out_2_V;
output   layer8_out_2_V_ap_vld;
output  [15:0] layer8_out_3_V;
output   layer8_out_3_V_ap_vld;
output  [15:0] layer8_out_4_V;
output   layer8_out_4_V_ap_vld;
output  [15:0] layer8_out_5_V;
output   layer8_out_5_V_ap_vld;
output  [15:0] layer8_out_6_V;
output   layer8_out_6_V_ap_vld;
output  [15:0] layer8_out_7_V;
output   layer8_out_7_V_ap_vld;
output  [15:0] layer8_out_8_V;
output   layer8_out_8_V_ap_vld;
output  [15:0] layer8_out_9_V;
output   layer8_out_9_V_ap_vld;
output  [15:0] layer8_out_10_V;
output   layer8_out_10_V_ap_vld;
output  [15:0] layer8_out_11_V;
output   layer8_out_11_V_ap_vld;
output  [15:0] layer8_out_12_V;
output   layer8_out_12_V_ap_vld;
output  [15:0] layer8_out_13_V;
output   layer8_out_13_V_ap_vld;
output  [15:0] layer8_out_14_V;
output   layer8_out_14_V_ap_vld;
output  [15:0] layer8_out_15_V;
output   layer8_out_15_V_ap_vld;
output  [15:0] const_size_in_1;
output   const_size_in_1_ap_vld;
output  [15:0] const_size_out_1;
output   const_size_out_1_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer8_out_0_V_ap_vld;
reg layer8_out_1_V_ap_vld;
reg layer8_out_2_V_ap_vld;
reg layer8_out_3_V_ap_vld;
reg layer8_out_4_V_ap_vld;
reg layer8_out_5_V_ap_vld;
reg layer8_out_6_V_ap_vld;
reg layer8_out_7_V_ap_vld;
reg layer8_out_8_V_ap_vld;
reg layer8_out_9_V_ap_vld;
reg layer8_out_10_V_ap_vld;
reg layer8_out_11_V_ap_vld;
reg layer8_out_12_V_ap_vld;
reg layer8_out_13_V_ap_vld;
reg layer8_out_14_V_ap_vld;
reg layer8_out_15_V_ap_vld;
reg const_size_in_1_ap_vld;
reg const_size_out_1_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    input_V_ap_vld_in_sig;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [191:0] input_V_preg;
reg   [191:0] input_V_in_sig;
reg    input_V_ap_vld_preg;
reg    input_V_blk_n;
wire    ap_block_pp0_stage0;
reg   [15:0] layer3_out_0_V_reg_668;
reg   [15:0] layer3_out_1_V_reg_673;
reg   [15:0] layer3_out_2_V_reg_678;
reg   [15:0] layer3_out_3_V_reg_683;
reg   [15:0] layer3_out_4_V_reg_688;
reg   [15:0] layer3_out_5_V_reg_693;
reg   [15:0] layer3_out_6_V_reg_698;
reg   [15:0] layer3_out_7_V_reg_703;
reg   [15:0] layer3_out_8_V_reg_708;
reg   [15:0] layer3_out_9_V_reg_713;
reg   [15:0] layer3_out_10_V_reg_718;
reg   [15:0] layer3_out_11_V_reg_723;
reg   [15:0] layer3_out_12_V_reg_728;
reg   [15:0] layer3_out_13_V_reg_733;
reg   [15:0] layer3_out_14_V_reg_738;
reg   [15:0] layer3_out_15_V_reg_743;
reg   [15:0] layer6_out_0_V_reg_748;
reg   [15:0] layer6_out_1_V_reg_753;
reg   [15:0] layer6_out_2_V_reg_758;
reg   [15:0] layer6_out_3_V_reg_763;
reg   [15:0] layer6_out_4_V_reg_768;
reg   [15:0] layer6_out_5_V_reg_773;
reg   [15:0] layer6_out_6_V_reg_778;
reg   [15:0] layer6_out_7_V_reg_783;
reg   [15:0] layer6_out_8_V_reg_788;
reg   [15:0] layer6_out_9_V_reg_793;
reg   [15:0] layer6_out_10_V_reg_798;
reg   [15:0] layer6_out_11_V_reg_803;
reg   [15:0] layer6_out_12_V_reg_808;
reg   [15:0] layer6_out_13_V_reg_813;
reg   [15:0] layer6_out_14_V_reg_818;
reg   [15:0] layer6_out_15_V_reg_823;
reg    ap_block_pp0_stage0_subdone;
wire    call_ret3_dense_latency_0_0_0_s_fu_212_ap_ready;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_0;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_1;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_2;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_3;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_4;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_5;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_6;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_7;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_8;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_9;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_10;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_11;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_12;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_13;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_14;
wire   [15:0] call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_15;
wire    call_ret1_dense_latency_0_0_0_1_fu_232_ap_ready;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_0;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_1;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_2;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_3;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_4;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_5;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_6;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_7;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_8;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_9;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_10;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_11;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_12;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_13;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_14;
wire   [15:0] call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_15;
wire    grp_sigmoid_fu_252_ap_start;
wire    grp_sigmoid_fu_252_ap_done;
wire    grp_sigmoid_fu_252_ap_idle;
wire    grp_sigmoid_fu_252_ap_ready;
reg    grp_sigmoid_fu_252_ap_ce;
wire   [15:0] grp_sigmoid_fu_252_ap_return_0;
wire   [15:0] grp_sigmoid_fu_252_ap_return_1;
wire   [15:0] grp_sigmoid_fu_252_ap_return_2;
wire   [15:0] grp_sigmoid_fu_252_ap_return_3;
wire   [15:0] grp_sigmoid_fu_252_ap_return_4;
wire   [15:0] grp_sigmoid_fu_252_ap_return_5;
wire   [15:0] grp_sigmoid_fu_252_ap_return_6;
wire   [15:0] grp_sigmoid_fu_252_ap_return_7;
wire   [15:0] grp_sigmoid_fu_252_ap_return_8;
wire   [15:0] grp_sigmoid_fu_252_ap_return_9;
wire   [15:0] grp_sigmoid_fu_252_ap_return_10;
wire   [15:0] grp_sigmoid_fu_252_ap_return_11;
wire   [15:0] grp_sigmoid_fu_252_ap_return_12;
wire   [15:0] grp_sigmoid_fu_252_ap_return_13;
wire   [15:0] grp_sigmoid_fu_252_ap_return_14;
wire   [15:0] grp_sigmoid_fu_252_ap_return_15;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call94;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call94;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call94;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call94;
reg    ap_block_pp0_stage0_11001_ignoreCallOp74;
wire    call_ret2_relu_fu_274_ap_ready;
wire   [7:0] call_ret2_relu_fu_274_ap_return_0;
wire   [7:0] call_ret2_relu_fu_274_ap_return_1;
wire   [7:0] call_ret2_relu_fu_274_ap_return_2;
wire   [7:0] call_ret2_relu_fu_274_ap_return_3;
wire   [7:0] call_ret2_relu_fu_274_ap_return_4;
wire   [7:0] call_ret2_relu_fu_274_ap_return_5;
wire   [7:0] call_ret2_relu_fu_274_ap_return_6;
wire   [7:0] call_ret2_relu_fu_274_ap_return_7;
wire   [7:0] call_ret2_relu_fu_274_ap_return_8;
wire   [7:0] call_ret2_relu_fu_274_ap_return_9;
wire   [7:0] call_ret2_relu_fu_274_ap_return_10;
wire   [7:0] call_ret2_relu_fu_274_ap_return_11;
wire   [7:0] call_ret2_relu_fu_274_ap_return_12;
wire   [7:0] call_ret2_relu_fu_274_ap_return_13;
wire   [7:0] call_ret2_relu_fu_274_ap_return_14;
wire   [7:0] call_ret2_relu_fu_274_ap_return_15;
wire    call_ret_normalize_0_0_0_0_0_s_fu_294_ap_ready;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_0;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_1;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_2;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_3;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_4;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_5;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_6;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_7;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_8;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_9;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_10;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_11;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_12;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_13;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_14;
wire   [15:0] call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_15;
reg    grp_sigmoid_fu_252_ap_start_reg;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 input_V_preg = 192'd0;
#0 input_V_ap_vld_preg = 1'b0;
#0 grp_sigmoid_fu_252_ap_start_reg = 1'b0;
end

dense_latency_0_0_0_s call_ret3_dense_latency_0_0_0_s_fu_212(
    .ap_ready(call_ret3_dense_latency_0_0_0_s_fu_212_ap_ready),
    .data_0_V_read(call_ret2_relu_fu_274_ap_return_0),
    .data_1_V_read(call_ret2_relu_fu_274_ap_return_1),
    .data_2_V_read(call_ret2_relu_fu_274_ap_return_2),
    .data_3_V_read(call_ret2_relu_fu_274_ap_return_3),
    .data_4_V_read(call_ret2_relu_fu_274_ap_return_4),
    .data_5_V_read(call_ret2_relu_fu_274_ap_return_5),
    .data_6_V_read(call_ret2_relu_fu_274_ap_return_6),
    .data_7_V_read(call_ret2_relu_fu_274_ap_return_7),
    .data_8_V_read(call_ret2_relu_fu_274_ap_return_8),
    .data_9_V_read(call_ret2_relu_fu_274_ap_return_9),
    .data_10_V_read(call_ret2_relu_fu_274_ap_return_10),
    .data_11_V_read(call_ret2_relu_fu_274_ap_return_11),
    .data_12_V_read(call_ret2_relu_fu_274_ap_return_12),
    .data_13_V_read(call_ret2_relu_fu_274_ap_return_13),
    .data_14_V_read(call_ret2_relu_fu_274_ap_return_14),
    .data_15_V_read(call_ret2_relu_fu_274_ap_return_15),
    .ap_return_0(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_0),
    .ap_return_1(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_1),
    .ap_return_2(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_2),
    .ap_return_3(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_3),
    .ap_return_4(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_4),
    .ap_return_5(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_5),
    .ap_return_6(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_6),
    .ap_return_7(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_7),
    .ap_return_8(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_8),
    .ap_return_9(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_9),
    .ap_return_10(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_10),
    .ap_return_11(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_11),
    .ap_return_12(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_12),
    .ap_return_13(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_13),
    .ap_return_14(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_14),
    .ap_return_15(call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_15)
);

dense_latency_0_0_0_1 call_ret1_dense_latency_0_0_0_1_fu_232(
    .ap_ready(call_ret1_dense_latency_0_0_0_1_fu_232_ap_ready),
    .data_0_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_0),
    .data_1_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_1),
    .data_2_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_2),
    .data_3_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_3),
    .data_4_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_4),
    .data_5_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_5),
    .data_6_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_6),
    .data_7_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_7),
    .data_8_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_8),
    .data_9_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_9),
    .data_10_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_10),
    .data_11_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_11),
    .data_12_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_12),
    .data_13_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_13),
    .data_14_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_14),
    .data_15_V_read(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_15),
    .ap_return_0(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_0),
    .ap_return_1(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_1),
    .ap_return_2(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_2),
    .ap_return_3(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_3),
    .ap_return_4(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_4),
    .ap_return_5(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_5),
    .ap_return_6(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_6),
    .ap_return_7(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_7),
    .ap_return_8(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_8),
    .ap_return_9(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_9),
    .ap_return_10(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_10),
    .ap_return_11(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_11),
    .ap_return_12(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_12),
    .ap_return_13(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_13),
    .ap_return_14(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_14),
    .ap_return_15(call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_15)
);

sigmoid grp_sigmoid_fu_252(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sigmoid_fu_252_ap_start),
    .ap_done(grp_sigmoid_fu_252_ap_done),
    .ap_idle(grp_sigmoid_fu_252_ap_idle),
    .ap_ready(grp_sigmoid_fu_252_ap_ready),
    .ap_ce(grp_sigmoid_fu_252_ap_ce),
    .data_0_V_read(layer6_out_0_V_reg_748),
    .data_1_V_read(layer6_out_1_V_reg_753),
    .data_2_V_read(layer6_out_2_V_reg_758),
    .data_3_V_read(layer6_out_3_V_reg_763),
    .data_4_V_read(layer6_out_4_V_reg_768),
    .data_5_V_read(layer6_out_5_V_reg_773),
    .data_6_V_read(layer6_out_6_V_reg_778),
    .data_7_V_read(layer6_out_7_V_reg_783),
    .data_8_V_read(layer6_out_8_V_reg_788),
    .data_9_V_read(layer6_out_9_V_reg_793),
    .data_10_V_read(layer6_out_10_V_reg_798),
    .data_11_V_read(layer6_out_11_V_reg_803),
    .data_12_V_read(layer6_out_12_V_reg_808),
    .data_13_V_read(layer6_out_13_V_reg_813),
    .data_14_V_read(layer6_out_14_V_reg_818),
    .data_15_V_read(layer6_out_15_V_reg_823),
    .ap_return_0(grp_sigmoid_fu_252_ap_return_0),
    .ap_return_1(grp_sigmoid_fu_252_ap_return_1),
    .ap_return_2(grp_sigmoid_fu_252_ap_return_2),
    .ap_return_3(grp_sigmoid_fu_252_ap_return_3),
    .ap_return_4(grp_sigmoid_fu_252_ap_return_4),
    .ap_return_5(grp_sigmoid_fu_252_ap_return_5),
    .ap_return_6(grp_sigmoid_fu_252_ap_return_6),
    .ap_return_7(grp_sigmoid_fu_252_ap_return_7),
    .ap_return_8(grp_sigmoid_fu_252_ap_return_8),
    .ap_return_9(grp_sigmoid_fu_252_ap_return_9),
    .ap_return_10(grp_sigmoid_fu_252_ap_return_10),
    .ap_return_11(grp_sigmoid_fu_252_ap_return_11),
    .ap_return_12(grp_sigmoid_fu_252_ap_return_12),
    .ap_return_13(grp_sigmoid_fu_252_ap_return_13),
    .ap_return_14(grp_sigmoid_fu_252_ap_return_14),
    .ap_return_15(grp_sigmoid_fu_252_ap_return_15)
);

relu call_ret2_relu_fu_274(
    .ap_ready(call_ret2_relu_fu_274_ap_ready),
    .data_0_V_read(layer3_out_0_V_reg_668),
    .data_1_V_read(layer3_out_1_V_reg_673),
    .data_2_V_read(layer3_out_2_V_reg_678),
    .data_3_V_read(layer3_out_3_V_reg_683),
    .data_4_V_read(layer3_out_4_V_reg_688),
    .data_5_V_read(layer3_out_5_V_reg_693),
    .data_6_V_read(layer3_out_6_V_reg_698),
    .data_7_V_read(layer3_out_7_V_reg_703),
    .data_8_V_read(layer3_out_8_V_reg_708),
    .data_9_V_read(layer3_out_9_V_reg_713),
    .data_10_V_read(layer3_out_10_V_reg_718),
    .data_11_V_read(layer3_out_11_V_reg_723),
    .data_12_V_read(layer3_out_12_V_reg_728),
    .data_13_V_read(layer3_out_13_V_reg_733),
    .data_14_V_read(layer3_out_14_V_reg_738),
    .data_15_V_read(layer3_out_15_V_reg_743),
    .ap_return_0(call_ret2_relu_fu_274_ap_return_0),
    .ap_return_1(call_ret2_relu_fu_274_ap_return_1),
    .ap_return_2(call_ret2_relu_fu_274_ap_return_2),
    .ap_return_3(call_ret2_relu_fu_274_ap_return_3),
    .ap_return_4(call_ret2_relu_fu_274_ap_return_4),
    .ap_return_5(call_ret2_relu_fu_274_ap_return_5),
    .ap_return_6(call_ret2_relu_fu_274_ap_return_6),
    .ap_return_7(call_ret2_relu_fu_274_ap_return_7),
    .ap_return_8(call_ret2_relu_fu_274_ap_return_8),
    .ap_return_9(call_ret2_relu_fu_274_ap_return_9),
    .ap_return_10(call_ret2_relu_fu_274_ap_return_10),
    .ap_return_11(call_ret2_relu_fu_274_ap_return_11),
    .ap_return_12(call_ret2_relu_fu_274_ap_return_12),
    .ap_return_13(call_ret2_relu_fu_274_ap_return_13),
    .ap_return_14(call_ret2_relu_fu_274_ap_return_14),
    .ap_return_15(call_ret2_relu_fu_274_ap_return_15)
);

normalize_0_0_0_0_0_s call_ret_normalize_0_0_0_0_0_s_fu_294(
    .ap_ready(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_ready),
    .data_V_read(input_V_in_sig),
    .ap_return_0(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_0),
    .ap_return_1(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_1),
    .ap_return_2(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_2),
    .ap_return_3(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_3),
    .ap_return_4(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_4),
    .ap_return_5(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_5),
    .ap_return_6(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_6),
    .ap_return_7(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_7),
    .ap_return_8(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_8),
    .ap_return_9(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_9),
    .ap_return_10(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_10),
    .ap_return_11(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_11),
    .ap_return_12(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_12),
    .ap_return_13(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_13),
    .ap_return_14(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_14),
    .ap_return_15(call_ret_normalize_0_0_0_0_0_s_fu_294_ap_return_15)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sigmoid_fu_252_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_sigmoid_fu_252_ap_start_reg <= 1'b1;
        end else if ((grp_sigmoid_fu_252_ap_ready == 1'b1)) begin
            grp_sigmoid_fu_252_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_V_ap_vld_preg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_ap_vld_preg <= 1'b0;
        end else if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (input_V_ap_vld == 1'b1))) begin
            input_V_ap_vld_preg <= input_V_ap_vld;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        input_V_preg <= 192'd0;
    end else begin
        if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (input_V_ap_vld == 1'b1))) begin
            input_V_preg <= input_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer3_out_0_V_reg_668 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_0;
        layer3_out_10_V_reg_718 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_10;
        layer3_out_11_V_reg_723 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_11;
        layer3_out_12_V_reg_728 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_12;
        layer3_out_13_V_reg_733 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_13;
        layer3_out_14_V_reg_738 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_14;
        layer3_out_15_V_reg_743 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_15;
        layer3_out_1_V_reg_673 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_1;
        layer3_out_2_V_reg_678 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_2;
        layer3_out_3_V_reg_683 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_3;
        layer3_out_4_V_reg_688 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_4;
        layer3_out_5_V_reg_693 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_5;
        layer3_out_6_V_reg_698 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_6;
        layer3_out_7_V_reg_703 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_7;
        layer3_out_8_V_reg_708 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_8;
        layer3_out_9_V_reg_713 <= call_ret1_dense_latency_0_0_0_1_fu_232_ap_return_9;
        layer6_out_0_V_reg_748 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_0;
        layer6_out_10_V_reg_798 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_10;
        layer6_out_11_V_reg_803 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_11;
        layer6_out_12_V_reg_808 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_12;
        layer6_out_13_V_reg_813 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_13;
        layer6_out_14_V_reg_818 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_14;
        layer6_out_15_V_reg_823 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_15;
        layer6_out_1_V_reg_753 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_1;
        layer6_out_2_V_reg_758 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_2;
        layer6_out_3_V_reg_763 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_3;
        layer6_out_4_V_reg_768 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_4;
        layer6_out_5_V_reg_773 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_5;
        layer6_out_6_V_reg_778 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_6;
        layer6_out_7_V_reg_783 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_7;
        layer6_out_8_V_reg_788 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_8;
        layer6_out_9_V_reg_793 <= call_ret3_dense_latency_0_0_0_s_fu_212_ap_return_9;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        const_size_in_1_ap_vld = 1'b1;
    end else begin
        const_size_in_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        const_size_out_1_ap_vld = 1'b1;
    end else begin
        const_size_out_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp74) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_sigmoid_fu_252_ap_ce = 1'b1;
    end else begin
        grp_sigmoid_fu_252_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((input_V_ap_vld == 1'b1)) begin
        input_V_ap_vld_in_sig = input_V_ap_vld;
    end else begin
        input_V_ap_vld_in_sig = input_V_ap_vld_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_V_blk_n = input_V_ap_vld;
    end else begin
        input_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((input_V_ap_vld == 1'b1)) begin
        input_V_in_sig = input_V;
    end else begin
        input_V_in_sig = input_V_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_0_V_ap_vld = 1'b1;
    end else begin
        layer8_out_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_10_V_ap_vld = 1'b1;
    end else begin
        layer8_out_10_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_11_V_ap_vld = 1'b1;
    end else begin
        layer8_out_11_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_12_V_ap_vld = 1'b1;
    end else begin
        layer8_out_12_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_13_V_ap_vld = 1'b1;
    end else begin
        layer8_out_13_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_14_V_ap_vld = 1'b1;
    end else begin
        layer8_out_14_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_15_V_ap_vld = 1'b1;
    end else begin
        layer8_out_15_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_1_V_ap_vld = 1'b1;
    end else begin
        layer8_out_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_2_V_ap_vld = 1'b1;
    end else begin
        layer8_out_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_3_V_ap_vld = 1'b1;
    end else begin
        layer8_out_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_4_V_ap_vld = 1'b1;
    end else begin
        layer8_out_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_5_V_ap_vld = 1'b1;
    end else begin
        layer8_out_5_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_6_V_ap_vld = 1'b1;
    end else begin
        layer8_out_6_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_7_V_ap_vld = 1'b1;
    end else begin
        layer8_out_7_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_8_V_ap_vld = 1'b1;
    end else begin
        layer8_out_8_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer8_out_9_V_ap_vld = 1'b1;
    end else begin
        layer8_out_9_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp74 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call94 = ((ap_start == 1'b0) | (input_V_ap_vld_in_sig == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call94 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call94 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call94 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign const_size_in_1 = 16'd16;

assign const_size_out_1 = 16'd16;

assign grp_sigmoid_fu_252_ap_start = grp_sigmoid_fu_252_ap_start_reg;

assign layer8_out_0_V = grp_sigmoid_fu_252_ap_return_0;

assign layer8_out_10_V = grp_sigmoid_fu_252_ap_return_10;

assign layer8_out_11_V = grp_sigmoid_fu_252_ap_return_11;

assign layer8_out_12_V = grp_sigmoid_fu_252_ap_return_12;

assign layer8_out_13_V = grp_sigmoid_fu_252_ap_return_13;

assign layer8_out_14_V = grp_sigmoid_fu_252_ap_return_14;

assign layer8_out_15_V = grp_sigmoid_fu_252_ap_return_15;

assign layer8_out_1_V = grp_sigmoid_fu_252_ap_return_1;

assign layer8_out_2_V = grp_sigmoid_fu_252_ap_return_2;

assign layer8_out_3_V = grp_sigmoid_fu_252_ap_return_3;

assign layer8_out_4_V = grp_sigmoid_fu_252_ap_return_4;

assign layer8_out_5_V = grp_sigmoid_fu_252_ap_return_5;

assign layer8_out_6_V = grp_sigmoid_fu_252_ap_return_6;

assign layer8_out_7_V = grp_sigmoid_fu_252_ap_return_7;

assign layer8_out_8_V = grp_sigmoid_fu_252_ap_return_8;

assign layer8_out_9_V = grp_sigmoid_fu_252_ap_return_9;

endmodule //myproject
